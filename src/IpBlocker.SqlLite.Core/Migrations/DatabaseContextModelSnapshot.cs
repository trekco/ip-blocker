// <auto-generated />
using System;
using IpBlocker.SqlLite.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

using Trekco.IpBlocker.SqlLite.Core;

namespace IpBlocker.SqlLite.Core.Migrations
{
    [DbContext(typeof(IpBlockerDatabase))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("IpBlocker.SqlLite.Core.Objects.BlockedIpRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateBlocked");

                    b.Property<DateTime>("DateToUnblockIp");

                    b.Property<DateTime?>("DateUnblocked");

                    b.Property<string>("Ip");

                    b.Property<string>("IpLocation");

                    b.Property<bool>("IsBlocked");

                    b.Property<string>("Ports");

                    b.Property<string>("Protocol");

                    b.Property<string>("RuleName");

                    b.Property<string>("Source");

                    b.HasKey("Id");

                    b.ToTable("BlockedIpRecords");
                });

            modelBuilder.Entity("IpBlocker.SqlLite.Core.Objects.ConfigEntry", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("ConfigEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
